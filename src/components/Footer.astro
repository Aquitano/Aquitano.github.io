---
const year = new Date().getFullYear();

const sections = [
    {
        title: 'Menu',
        items: [
            { label: 'Über mich', href: '/timeline' },
            { label: 'Projects', href: '/#portfolio' },
            { label: 'Contact', href: '/contact' },
        ],
    },
    {
        title: 'Socials',
        items: [
            { label: 'LinkedIn', href: 'https://www.linkedin.com/in/thomas-breindl/' },
            { label: 'GitHub', href: 'https://github.com/Aquitano' },
            { label: 'Twitter / X', href: 'https://x.com/breindlthomas' },
        ],
    },
];
---

<footer class="relative z-10 mt-32 w-full">
    <div class="w-full px-4 py-12 sm:px-6 md:px-8 lg:py-16">
        <div class="grid gap-8 sm:grid-cols-2 sm:gap-10 lg:gap-16">
            {
                sections.map((section) => (
                    <div>
                        <h3 class="text-lg font-bold tracking-tight text-black/90 sm:text-xl md:text-2xl">
                            {section.title}
                        </h3>
                        <div class="mb-2 h-[2px] w-full bg-black/30" />
                        <ul class="mt-5 space-y-3">
                            {section.items.map((item) => (
                                <li>
                                    <a
                                        href={item.href}
                                        class="group inline-flex items-center text-base font-semibold text-black/80 transition-colors hover:text-black sm:text-lg md:text-xl"
                                    >
                                        <span class="bg-gradient-to-r from-black/30 to-black/30 bg-[length:0%_2px] bg-left-bottom bg-no-repeat transition-[background-size] duration-300 ease-out group-hover:bg-[length:100%_2px]">
                                            {item.label}
                                        </span>
                                    </a>
                                </li>
                            ))}
                        </ul>
                    </div>
                ))
            }
        </div>

        <div class="mt-16 grid grid-cols-1 items-end gap-10 sm:mt-20 lg:grid-cols-2">
            <p
                class="text-5xl leading-tight font-extrabold tracking-tight text-black/85 sm:text-6xl md:text-6xl lg:text-7xl"
            >
                © {year} Thomas Breindl
                <br class="hidden md:block" />
                All rights reserved.
            </p>
            <div class="justify-self-start text-black/70 md:justify-self-end">
                <div class="text-xs font-bold tracking-widest text-black/60 uppercase">Local time</div>
                <div id="local-time" class="mt-2 font-mono text-lg font-semibold sm:text-xl"></div>
            </div>
        </div>
    </div>
</footer>
<style>
    footer::before {
        content: '';
        position: absolute;
        inset: -40px 0 0;
        pointer-events: none;
        background: radial-gradient(800px 160px at 50% 0, rgba(255, 255, 255, 0.06), transparent 60%);
    }
</style>
<script>
    let intervalId: number | undefined;

    function mountClock() {
        const localTime = document.getElementById('local-time');
        function updateTime() {
            try {
                const now = new Date();
                const formatter = new Intl.DateTimeFormat(undefined, {
                    hour: '2-digit',
                    minute: '2-digit',
                    second: '2-digit',
                    hour12: true,
                    timeZoneName: 'short',
                    timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,
                });
                localTime && (localTime.textContent = formatter.format(now));
            } catch {
                localTime && (localTime.textContent = new Date().toLocaleTimeString());
            }
        }
        updateTime();
        if (intervalId) clearInterval(intervalId);
        intervalId = window.setInterval(updateTime, 1000);
    }

    // Mount on load and after Astro client navigation swaps
    document.addEventListener('DOMContentLoaded', mountClock);
    document.addEventListener('astro:after-swap', mountClock);
    document.addEventListener('astro:before-swap', () => {
        if (intervalId) clearInterval(intervalId);
    });
    // In case the page was hydrated without DOMContentLoaded
    mountClock();
</script>
